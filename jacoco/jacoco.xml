<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="javabean-tester"><sessioninfo id="BitfenixGhost-665648f7" start="1653160838906" dump="1653160841989"/><package name="com/codebox/builders"><class name="com/codebox/builders/ExtensionBuilder" sourcefilename="ExtensionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="11" covered="95"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateGetter" desc="(Ljavassist/CtClass;Ljava/lang/String;Ljava/lang/Class;)Ljavassist/CtMethod;" line="107"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateSetter" desc="(Ljavassist/CtClass;Ljava/lang/String;Ljava/lang/Class;)Ljavassist/CtMethod;" line="138"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveCtClass" desc="(Ljava/lang/Class;)Ljavassist/CtClass;" line="169"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="239"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExtensionBuilder.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="2"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="239"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="11" covered="239"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/codebox/instance"><class name="com/codebox/instance/ConstructorInstance" sourcefilename="ConstructorInstance.java"><method name="newInstance" desc="(Ljava/lang/reflect/Constructor;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="19" covered="5"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inaccessible" desc="(Ljava/lang/Class;)V" line="60"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/instance/ClassInstance" sourcefilename="ClassInstance.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="50" covered="78"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="8" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildValue" desc="(Ljava/lang/Class;Lcom/codebox/enums/LoadType;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="93"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ClassInstance.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="17" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="13" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="15" mb="1" cb="1"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="93"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstructorInstance.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="7" mb="1" cb="1"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="71" covered="128"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="13" covered="25"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/codebox/bean"><class name="com/codebox/bean/ValueBuilder" sourcefilename="ValueBuilder.java"><method name="buildValue" desc="(Ljava/lang/Class;Lcom/codebox/enums/LoadType;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="19" covered="151"/><counter type="BRANCH" missed="4" covered="31"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAlternateValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStandardValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValues" desc="(Ljava/lang/Class;Ljava/lang/String;ILjava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Double;Ljava/lang/Float;Ljava/lang/Character;Ljava/lang/Byte;)Ljava/lang/Object;" line="226"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeBoolean" desc="(Ljava/lang/Class;Ljava/lang/Boolean;)Ljava/lang/Object;" line="269"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeInteger" desc="(Ljava/lang/Class;Ljava/lang/Integer;)Ljava/lang/Object;" line="288"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeLong" desc="(Ljava/lang/Class;Ljava/lang/Long;)Ljava/lang/Object;" line="307"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeDouble" desc="(Ljava/lang/Class;Ljava/lang/Double;)Ljava/lang/Object;" line="326"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeFloat" desc="(Ljava/lang/Class;Ljava/lang/Float;)Ljava/lang/Object;" line="345"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeCharacter" desc="(Ljava/lang/Class;Ljava/lang/Character;)Ljava/lang/Object;" line="364"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeByte" desc="(Ljava/lang/Class;Ljava/lang/Byte;)Ljava/lang/Object;" line="383"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoadData" desc="()Lcom/codebox/enums/LoadData;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLoadData" desc="(Lcom/codebox/enums/LoadData;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="45"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="45"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="95" covered="364"/><counter type="BRANCH" missed="18" covered="91"/><counter type="LINE" missed="7" covered="82"/><counter type="COMPLEXITY" missed="15" covered="60"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/bean/JavaBeanTesterWorker" sourcefilename="JavaBeanTesterWorker.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/Class;Ljava/lang/Object;Lcom/codebox/enums/LoadData;[Ljava/lang/String;)Lcom/codebox/bean/JavaBeanTesterWorker;" line="138"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="()V" line="156"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getterSetterTests" desc="(Ljava/lang/Object;)V" line="187"><counter type="INSTRUCTION" missed="27" covered="149"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearTest" desc="()V" line="262"><counter type="INSTRUCTION" missed="34" covered="84"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructorsTest" desc="()V" line="294"><counter type="INSTRUCTION" missed="23" covered="53"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSerializableTest" desc="()V" line="326"><counter type="INSTRUCTION" missed="12" covered="32"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implementsSerializable" desc="(Ljava/lang/Object;)Z" line="353"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSerialize" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="367"><counter type="INSTRUCTION" missed="40" covered="23"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildValue" desc="(Ljava/lang/Class;Lcom/codebox/enums/LoadType;)Ljava/lang/Object;" line="400"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsHashCodeToStringSymmetricTest" desc="()V" line="410"><counter type="INSTRUCTION" missed="9" covered="406"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="68"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsTests" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="538"><counter type="INSTRUCTION" missed="18" covered="164"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classHasSetters" desc="(Ljava/lang/Class;)Z" line="623"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProps" desc="(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;" line="637"><counter type="INSTRUCTION" missed="21" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCheckClear" desc="()Lcom/codebox/enums/CheckClear;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCheckConstructor" desc="()Lcom/codebox/enums/CheckConstructor;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCheckEquals" desc="()Lcom/codebox/enums/CheckEquals;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCheckSerializable" desc="()Lcom/codebox/enums/CheckSerialize;" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoadData" desc="()Lcom/codebox/enums/LoadData;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClazz" desc="()Ljava/lang/Class;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="()Ljava/lang/Class;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSkipStrictSerializable" desc="()Lcom/codebox/enums/SkipStrictSerialize;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSkipThese" desc="()Ljava/util/Set;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCheckClear" desc="(Lcom/codebox/enums/CheckClear;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCheckConstructor" desc="(Lcom/codebox/enums/CheckConstructor;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCheckEquals" desc="(Lcom/codebox/enums/CheckEquals;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCheckSerializable" desc="(Lcom/codebox/enums/CheckSerialize;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLoadData" desc="(Lcom/codebox/enums/LoadData;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtension" desc="(Ljava/lang/Class;)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSkipStrictSerializable" desc="(Lcom/codebox/enums/SkipStrictSerialize;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSkipThese" desc="(Ljava/util/Set;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="64"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$classHasSetters$0" desc="(Ljava/beans/PropertyDescriptor;)Z" line="624"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="570" covered="1115"/><counter type="BRANCH" missed="95" covered="71"/><counter type="LINE" missed="43" covered="204"/><counter type="COMPLEXITY" missed="67" covered="54"/><counter type="METHOD" missed="12" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/bean/JavaBeanTesterBuilder" sourcefilename="JavaBeanTesterBuilder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkClear" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkClear" desc="(Z)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="80"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConstructor" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConstructor" desc="(Z)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="102"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEquals" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEquals" desc="(Z)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSerializable" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSerializable" desc="(Z)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="146"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadData" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadData" desc="(Z)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="168"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipStrictSerializable" desc="()Lcom/codebox/bean/JavaBeanTesterBuilder;" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="([Ljava/lang/String;)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="194"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testPrivateConstructor" desc="()V" line="211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testObjectMethods" desc="()V" line="218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testInstance" desc="(Ljava/lang/Object;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testEquals" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/bean/JavaBeanTester" sourcefilename="JavaBeanTester.java"><method name="builder" desc="(Ljava/lang/Class;)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lcom/codebox/bean/JavaBeanTesterBuilder;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ValueBuilder.java"><line nr="45" mi="73" ci="7" mb="14" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="4"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="3"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="4"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="12" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="12" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="4"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="4"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="4"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="4"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="4"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="4"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="4"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="4"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="4"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="4"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="4"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="4"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="4"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="4"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="364"/><counter type="BRANCH" missed="18" covered="91"/><counter type="LINE" missed="7" covered="82"/><counter type="COMPLEXITY" missed="15" covered="60"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaBeanTester.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaBeanTesterBuilder.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="2"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaBeanTesterWorker.java"><line nr="64" mi="365" ci="28" mb="78" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="16" mb="0" cb="2"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="1" cb="3"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="1" cb="3"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="9" mb="2" cb="2"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="10" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="11" mb="0" cb="4"/><line nr="238" mi="0" ci="5" mb="1" cb="1"/><line nr="239" mi="0" ci="3" mb="1" cb="1"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="9" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="10" ci="0" mb="0" cb="0"/><line nr="251" mi="12" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="16" mb="0" cb="2"/><line nr="264" mi="0" ci="5" mb="0" cb="2"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="16" mb="0" cb="2"/><line nr="270" mi="4" ci="4" mb="3" cb="1"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="11" mb="0" cb="0"/><line nr="279" mi="0" ci="11" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="10" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="18" mb="0" cb="2"/><line nr="297" mi="0" ci="4" mb="1" cb="1"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="8" mb="0" cb="2"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="8" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="12" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="7" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="2"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="1" cb="1"/><line nr="340" mi="12" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="10" mb="1" cb="3"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="9" ci="0" mb="0" cb="0"/><line nr="372" mi="8" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="1" ci="0" mb="0" cb="0"/><line nr="381" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="8" ci="0" mb="0" cb="0"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="0" ci="9" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="9" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="7" mb="0" cb="0"/><line nr="425" mi="0" ci="9" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="10" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="12" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="12" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="10" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="8" mb="0" cb="0"/><line nr="440" mi="0" ci="12" mb="0" cb="0"/><line nr="441" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="8" mb="0" cb="0"/><line nr="445" mi="0" ci="10" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="10" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="10" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="10" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="0" cb="2"/><line nr="460" mi="0" ci="9" mb="0" cb="0"/><line nr="463" mi="0" ci="9" mb="0" cb="0"/><line nr="466" mi="0" ci="10" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="470" mi="0" ci="10" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="472" mi="0" ci="8" mb="0" cb="0"/><line nr="475" mi="0" ci="9" mb="0" cb="0"/><line nr="478" mi="0" ci="4" mb="0" cb="2"/><line nr="479" mi="0" ci="10" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="13" mb="0" cb="0"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="8" mb="0" cb="0"/><line nr="494" mi="0" ci="12" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="8" mb="0" cb="0"/><line nr="498" mi="0" ci="12" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="8" mb="0" cb="0"/><line nr="506" mi="0" ci="7" mb="0" cb="0"/><line nr="507" mi="0" ci="7" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="7" mb="0" cb="0"/><line nr="517" mi="0" ci="7" mb="0" cb="0"/><line nr="518" mi="5" ci="0" mb="0" cb="0"/><line nr="519" mi="3" ci="0" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="1" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="2"/><line nr="539" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="16" mb="0" cb="2"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="1" cb="3"/><line nr="554" mi="0" ci="12" mb="0" cb="0"/><line nr="556" mi="0" ci="7" mb="0" cb="0"/><line nr="557" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="4" mb="1" cb="3"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="9" mb="2" cb="2"/><line nr="572" mi="0" ci="6" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="578" mi="0" ci="10" mb="0" cb="0"/><line nr="581" mi="0" ci="4" mb="0" cb="2"/><line nr="582" mi="0" ci="4" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="10" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="2"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="601" mi="0" ci="10" mb="0" cb="0"/><line nr="603" mi="1" ci="0" mb="0" cb="0"/><line nr="605" mi="8" ci="0" mb="0" cb="0"/><line nr="606" mi="1" ci="0" mb="0" cb="0"/><line nr="607" mi="7" ci="0" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="624" mi="0" ci="8" mb="0" cb="2"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="5" mb="0" cb="0"/><line nr="639" mi="0" ci="1" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="641" mi="0" ci="10" mb="0" cb="2"/><line nr="643" mi="0" ci="11" mb="0" cb="2"/><line nr="644" mi="0" ci="5" mb="0" cb="2"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="0"/><line nr="649" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="0" ci="7" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="10" ci="0" mb="0" cb="0"/><line nr="653" mi="7" ci="0" mb="0" cb="0"/><line nr="654" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="570" covered="1115"/><counter type="BRANCH" missed="95" covered="71"/><counter type="LINE" missed="43" covered="204"/><counter type="COMPLEXITY" missed="67" covered="54"/><counter type="METHOD" missed="12" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="665" covered="1624"/><counter type="BRANCH" missed="113" covered="174"/><counter type="LINE" missed="50" covered="325"/><counter type="COMPLEXITY" missed="82" covered="142"/><counter type="METHOD" missed="17" covered="63"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/codebox/enums"><class name="com/codebox/enums/SkipStrictSerialize" sourcefilename="SkipStrictSerialize.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/CheckSerialize" sourcefilename="CheckSerialize.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/LoadData" sourcefilename="LoadData.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/LoadType" sourcefilename="LoadType.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/CheckEquals" sourcefilename="CheckEquals.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/CheckClear" sourcefilename="CheckClear.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/CheckConstructor" sourcefilename="CheckConstructor.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CheckConstructor.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoadType.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SkipStrictSerialize.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckSerialize.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckEquals.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CheckClear.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoadData.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="7"/></package><counter type="INSTRUCTION" missed="747" covered="2108"/><counter type="BRANCH" missed="116" covered="187"/><counter type="LINE" missed="64" covered="421"/><counter type="COMPLEXITY" missed="85" covered="165"/><counter type="METHOD" missed="17" covered="81"/><counter type="CLASS" missed="0" covered="14"/></report>